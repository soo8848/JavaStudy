<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    <a href="#"> jsp link</a>
<%! //member 정의하는 역할 
	private String name="member data name";
%>
<% //xxxservice()가 실행가되는게 아주 중요하다. - 메소드 내의 구현부에 들어갈 코드
	for(int i=0; i<10; i++) {
		System.out.println(i); //콘솔에 출력하지 않고 브라우저에 출력하는 방법이 있을까?
		out.println(i);	// Java Web Server 개발환경 그림을 보면, response객체인걸 알 수 있다. 즉, 브라우저에 뿌려주는  명령어인 셈.  400에러는 사용자 잘못.
//hello.jsp 내부적으로 자바로 생성된다. 이클립스 내 jsp 파일을 지우고  <%!의 !를 지우고 저장한 상태에서 새로고침을 하면 브라우저의 hello.jsp가 500에러 서버에러가 뜬다. 자바 문법 적인 오류라 컴파일 오류인데 서버 오류로 뜬다. 컴파일 오류를 브라우저 에러 화면으로 보기 보다는 이클립스 내 컴파일로 보는게 더 좋지만 빨간색 밑줄인 오류가 발생하지 않는다.
//
	}
%>
<%=name //name에 .toString()추가해서 일부러 NPE오류를 발생시켜보자. 
//NPE오류인데 위와 똑같이 500에러가 뜨고 브라우저의 root cause에서 NPE오류라는걸 알려줘버린다.
//완전히 오류없는 코드는 만들 수 없다. 똑같이 500에러인데 이게 컴파일 문제인지 실행에서의 문제인지 경계가 애매모호하다. 
// 컴파일이라는 단계가 꽤 괜찮은 사전검증 단계이다. 문제는 jsp는 개발자가 검증되지 않는 코드를 막 가져다 쓸 수 있다. 또한 오류없는 코드는 없다. 편한건 확실하나 각자의 문법의 이해도가 굉장히 중요하다.

//jsp입장에서는 자바코드는 서버에서 도는애 html코드는 브라우저에서 도는애이다. 그래서 jsp는 서버에서 도는 코드는 컴파일을 안해서 별로다. html코드는 쉽다.

%>